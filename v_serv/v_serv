#!/bin/bash

cd "$(dirname "$BASH_SOURCE")"

TOOLS=(
    "nc"
    "ss"
)

for tool in "${TOOLS[@]}"; do
    if ! type "$tool" &>/dev/null; then
        echo "Request '$tool', please install it." >&2
        exit 1
    fi
done

usage()
{
cat << EOF
Usage: $0 <real_user_port> <virtual_user_manager_port> <virtual_user_port>
    options:
        -h      Show this message and exit.
        -f      Do not show dialog even if param error.
EOF
}

ARGS=$(getopt -o 'hf' -- "$@")
[ $? -ne 0 ] && exit 1
eval "set -- $ARGS"

USE_DIALOG="yes"

while [ $# -gt 0 ]; do
    case "$1" in
        "-h")
            usage
            exit 0
            ;;
        "-f")
            USE_DIALOG="no"
            ;;
        "--")
            shift
            break
            ;;
    esac
    shift
done

USER_PORT=$1
V_CLI_MGR_PORT=$2
V_CLI_USER_PORT=$3

input_config()
{
    local tmp=$(mktemp)
    dialog --form Configure 0 0 3 \
        'real user port' 1 1 "$USER_PORT" 1 30 30 50 \
        'virtual user manager port' 2 1 "$V_CLI_MGR_PORT" 2 30 30 50 \
        'virtual user port' 3 1 "$V_CLI_USER_PORT" 3 30 30 50 \
        2>"$tmp"
    local ret=$?
    USER_PORT=$(sed -n '1p' "$tmp")
    sed -i '1d' "$tmp"
    V_CLI_MGR_PORT=$(sed -n '1p' "$tmp")
    sed -i '1d' "$tmp"
    V_CLI_USER_PORT=$(sed -n '1p' "$tmp")
    rm -f "$tmp"
    return "$ret"
}

show_error()
{
    local msg=$1
    if [ "$USE_DIALOG" == "yes" ] && type dialog &>/dev/null; then
        dialog --msgbox "$msg" 5 60
    else
        echo "$msg" >&2
    fi
}

check_config()
{
    if [ -z "$USER_PORT" ] || [ -z "$V_CLI_MGR_PORT" ] || [ -z "$V_CLI_USER_PORT" ]; then
        show_error "exist empty param."
        return 1
    fi

    echo "$USER_PORT" | grep -q '[^0-9]' && show_error "real user port must be 0~65535 int." && return 1
    echo "$V_CLI_MGR_PORT" | grep -q '[^0-9]' && show_error "virtual user manager port must be 0~65535 int." && return 1
    echo "$V_CLI_USER_PORT" | grep -q '[^0-9]' && show_error "virtual user port must be 0~65535 int." && return 1

    ((USER_PORT > 65535)) && show_error "real user port must be 0~65535 int." && return 1
    ((V_CLI_MGR_PORT > 65535)) && show_error "virtual user manager port must be 0~65535 int." && return 1
    ((V_CLI_USER_PORT > 65535)) && show_error "virtual user port must be 0~65535 int." && return 1

    return 0
}

if [ $# -lt 3 ]; then
    if [ "$USE_DIALOG" == "no" ] || ! type dialog &>/dev/null; then
        usage >&2
        exit 1
    fi
    input_config || exit 1
fi

while ! check_config; do
    if [ "$USE_DIALOG" == "no" ] || ! type dialog &>/dev/null; then
        echo "check config failed." >&2
        exit 1
    fi
    input_config || exit 1
done

cat >&2 << EOF
real user port              : $USER_PORT
virtual user manager port   : $V_CLI_MGR_PORT
virtual user port           : $V_CLI_USER_PORT
EOF

./v_serv_mgr.sh "$USER_PORT" "$V_CLI_MGR_PORT" "$V_CLI_USER_PORT"
